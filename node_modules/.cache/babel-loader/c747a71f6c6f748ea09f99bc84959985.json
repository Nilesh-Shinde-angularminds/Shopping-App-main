{"ast":null,"code":"// import React, { useEffect, useState } from 'react'\n// import axios from \"axios\";\n// import { ToastContainer, toast } from 'react-toastify';\n// import { useDispatch ,useSelector } from 'react-redux';\n// import { setCurrentPage, setItemsPerPage  } from './PaginationSlice';\n// function Pagination(props) {\n//     const dispatch= useDispatch()\n//   const { currentPage, itemsPerPage } = useSelector(\n//     (state) => state.PaginationData\n//   );\n//    console.log(currentPage)\n//     const [allProducts, setAllProducts] = useState([]);\n//     const [page, setPage] = useState(1);\n//     const [displayPages, setDisplayPages] = useState(3); //number of number display in paginationitems display\n//     // const [currentPage, setCurrentPage] = useState(1);\n//     // const [itemsPerPage, setItemsPerPage] = useState(5);\n//     // useEffect(()=>{\n//     //     dispatch(setCurrentPage(currentPage - 1));\n//     // },[currentPage])\n//     useEffect(() => {\n//          dispatch(setCurrentPage(0))\n//          setPage(1);\n//     }, [itemsPerPage]);\n//     const handlePage = (page) => {\n//         dispatch(setCurrentPage(page))\n//     };\n//     const setNext = () => {\n//         if (currentPage === page + displayPages - 1) {\n//             setPage(page + 1);\n//             dispatch(setCurrentPage(currentPage + 1));\n//         } else {\n//             dispatch(setCurrentPage(currentPage + 1));\n//         }\n//     };\n//     const setPrev = () => {\n//         if (currentPage === page) {\n//             setPage(page - 1);\n//            dispatch(setCurrentPage(currentPage - 1));\n//         } else {\n//             dispatch(setCurrentPage(currentPage - 1));\n//         }\n//     };\n//     return (\n//         <div className=\"row\" style={{ userSelect: 'none' }}>\n//             <div className=\"col-sm-8\">\n//                 <ul className=\"pagination\">\n//                     <li\n//                         className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}\n//                         onClick={() => setPrev()}\n//                         style={{\n//                             pointerEvents: `${currentPage === 1 ? \"none\" : \"\"}`,\n//                             cursor: \"pointer\",\n//                         }}\n//                     >\n//                         <a className=\"page-link\">Previous</a>\n//                     </li>\n//                     {\n//                         Array.from({ length: displayPages }, (_, i) => i).map(pageNo => {\n//                             if (page + pageNo <= Math.floor(props.AllDataLength / itemsPerPage) + 1) {\n//                                 return (\n//                                     <li\n//                                         key={pageNo}\n//                                         className={`page-item ${currentPage === page + pageNo ? \"active\" : \"\"\n//                                             }`}\n//                                         onClick={() => handlePage(page + pageNo)}\n//                                     >\n//                                         <a className=\"page-link\">{page + pageNo}</a>\n//                                     </li>\n//                                 )\n//                             }\n//                         })\n//                     }\n//                     <li\n//                         className={`page-item ${currentPage ===\n//                             Math.floor(props.AllDataLength  / itemsPerPage) + 1\n//                             ? \"disabled\"\n//                             : \"\"\n//                             }`}\n//                         onClick={() => setNext()}\n//                         style={{\n//                             pointerEvents: `${currentPage ===\n//                                 Math.floor(props.AllDataLength / itemsPerPage) + 1\n//                                 ? \"none\"\n//                                 : \"\"\n//                                 }`,\n//                             cursor: 'pointer'\n//                         }}\n//                     >\n//                         <a className=\"page-link\">Next</a>\n//                     </li>\n//                 </ul>\n//             </div>\n//             <div className=\"col-sm-4 text-right\">\n//                 <div style={{ margin: \"25px 0\" }}>\n//                     <label htmlFor=\"\" className=\"control-label\">\n//                         Items Per Page:\n//                     </label>\n//                     <select\n//                         name=\"\"\n//                         id=\"\"\n//                         defaultValue={\"5\"}\n//                         onChange={(e) =>{   dispatch(setItemsPerPage(e.target.value))}}\n//                     >\n//                         <option value=\"5\">5</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"25\">25</option>\n//                         <option value=\"50\">50</option>\n//                     </select>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n// export default Pagination","map":{"version":3,"sources":["/home/am-pc-63/Downloads/Shopping-App-main/src/Components/Pagination.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import React, { useEffect, useState } from 'react'\n// import axios from \"axios\";\n// import { ToastContainer, toast } from 'react-toastify';\n// import { useDispatch ,useSelector } from 'react-redux';\n// import { setCurrentPage, setItemsPerPage  } from './PaginationSlice';\n\n// function Pagination(props) {\n\n//     const dispatch= useDispatch()\n//   const { currentPage, itemsPerPage } = useSelector(\n//     (state) => state.PaginationData\n//   );\n//    console.log(currentPage)\n//     const [allProducts, setAllProducts] = useState([]);\n//     const [page, setPage] = useState(1);\n//     const [displayPages, setDisplayPages] = useState(3); //number of number display in paginationitems display\n//     // const [currentPage, setCurrentPage] = useState(1);\n//     // const [itemsPerPage, setItemsPerPage] = useState(5);\n\n   \n\n//     // useEffect(()=>{\n//     //     dispatch(setCurrentPage(currentPage - 1));\n//     // },[currentPage])\n\n    \n//     useEffect(() => {\n         \n//          dispatch(setCurrentPage(0))\n//          setPage(1);\n//     }, [itemsPerPage]);\n\n\n\n//     const handlePage = (page) => {\n//         dispatch(setCurrentPage(page))\n//     };\n\n//     const setNext = () => {\n//         if (currentPage === page + displayPages - 1) {\n//             setPage(page + 1);\n//             dispatch(setCurrentPage(currentPage + 1));\n//         } else {\n//             dispatch(setCurrentPage(currentPage + 1));\n//         }\n//     };\n\n//     const setPrev = () => {\n//         if (currentPage === page) {\n//             setPage(page - 1);\n//            dispatch(setCurrentPage(currentPage - 1));\n//         } else {\n//             dispatch(setCurrentPage(currentPage - 1));\n//         }\n//     };\n\n//     return (\n//         <div className=\"row\" style={{ userSelect: 'none' }}>\n//             <div className=\"col-sm-8\">\n//                 <ul className=\"pagination\">\n//                     <li\n//                         className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}\n//                         onClick={() => setPrev()}\n//                         style={{\n//                             pointerEvents: `${currentPage === 1 ? \"none\" : \"\"}`,\n//                             cursor: \"pointer\",\n//                         }}\n//                     >\n//                         <a className=\"page-link\">Previous</a>\n//                     </li>\n//                     {\n//                         Array.from({ length: displayPages }, (_, i) => i).map(pageNo => {\n//                             if (page + pageNo <= Math.floor(props.AllDataLength / itemsPerPage) + 1) {\n//                                 return (\n//                                     <li\n//                                         key={pageNo}\n//                                         className={`page-item ${currentPage === page + pageNo ? \"active\" : \"\"\n//                                             }`}\n//                                         onClick={() => handlePage(page + pageNo)}\n//                                     >\n//                                         <a className=\"page-link\">{page + pageNo}</a>\n//                                     </li>\n//                                 )\n//                             }\n//                         })\n//                     }\n//                     <li\n//                         className={`page-item ${currentPage ===\n//                             Math.floor(props.AllDataLength  / itemsPerPage) + 1\n//                             ? \"disabled\"\n//                             : \"\"\n//                             }`}\n//                         onClick={() => setNext()}\n//                         style={{\n//                             pointerEvents: `${currentPage ===\n//                                 Math.floor(props.AllDataLength / itemsPerPage) + 1\n//                                 ? \"none\"\n//                                 : \"\"\n//                                 }`,\n//                             cursor: 'pointer'\n//                         }}\n//                     >\n//                         <a className=\"page-link\">Next</a>\n//                     </li>\n//                 </ul>\n//             </div>\n\n//             <div className=\"col-sm-4 text-right\">\n//                 <div style={{ margin: \"25px 0\" }}>\n//                     <label htmlFor=\"\" className=\"control-label\">\n//                         Items Per Page:\n//                     </label>\n//                     <select\n//                         name=\"\"\n//                         id=\"\"\n//                         defaultValue={\"5\"}\n//                         onChange={(e) =>{   dispatch(setItemsPerPage(e.target.value))}}\n//                     >\n//                         <option value=\"5\">5</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"25\">25</option>\n//                         <option value=\"50\">50</option>\n//                     </select>\n//                 </div>\n//             </div>\n\n//         </div>\n//     )\n// }\n\n// export default Pagination"]},"metadata":{},"sourceType":"module"}