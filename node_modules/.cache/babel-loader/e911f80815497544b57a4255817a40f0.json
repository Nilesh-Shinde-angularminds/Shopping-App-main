{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-63/Downloads/Shopping-App-main/src/Components/Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentPage, setItemsPerPage, setPage } from \"./PaginationSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Pagination() {\n  _s();\n\n  const {\n    page,\n    currentPage,\n    itemsPerPage,\n    displayPages\n  } = useSelector(state => state.pagination);\n  const {\n    allProducts\n  } = useSelector(state => state.HomeData.dataFromApi);\n  const dispatch = useDispatch();\n\n  const handlePage = page => {\n    dispatch(setCurrentPage(page));\n  };\n\n  const handleItemsPerPage = value => {\n    dispatch(setItemsPerPage(value));\n    dispatch(setCurrentPage(1));\n    dispatch(setPage(1));\n  };\n\n  const setNext = () => {\n    if (currentPage === page + displayPages - 1) {\n      dispatch(setPage(page + 1));\n      dispatch(setCurrentPage(currentPage + 1));\n    } else {\n      dispatch(setCurrentPage(currentPage + 1));\n    }\n  };\n\n  const setPrev = () => {\n    if (currentPage === page) {\n      dispatch(setPage(page - 1));\n      dispatch(setCurrentPage(currentPage - 1));\n    } else {\n      dispatch(setCurrentPage(currentPage - 1));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    style: {\n      userSelect: \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-8\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === 1 ? \"disabled\" : \"\"}`,\n          onClick: () => setPrev(),\n          style: {\n            pointerEvents: `${currentPage === 1 ? \"none\" : \"\"}`,\n            cursor: \"pointer\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), Array.from({\n          length: displayPages\n        }, (_, i) => i).map(pageNo => {\n          if (page + pageNo <= Math.ceil(allProducts.length / itemsPerPage)) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `page-item ${currentPage === page + pageNo ? \"active\" : \"\"}`,\n              onClick: () => handlePage(page + pageNo),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                children: page + pageNo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, pageNo, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this);\n          }\n        }), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === Math.floor(allProducts.length / itemsPerPage) + 1 ? \"disabled\" : \"\"}`,\n          onClick: () => setNext(),\n          style: {\n            pointerEvents: `${currentPage === Math.floor(allProducts.length / itemsPerPage) + 1 ? \"none\" : \"\"}`,\n            cursor: \"pointer\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-4 text-right\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"25px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          className: \"control-label\",\n          children: \"Items Per Page:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"\",\n          id: \"\",\n          defaultValue: \"5\",\n          onChange: e => handleItemsPerPage(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"5\",\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"10\",\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"25\",\n            children: \"25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"50\",\n            children: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"JFa3v60nk+ewn4TzcFe6bVSf+8Q=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Pagination;\nexport default Pagination; // import React, { useEffect, useState } from 'react'\n// import axios from \"axios\";\n// import { ToastContainer, toast } from 'react-toastify';\n// import { useDispatch ,useSelector } from 'react-redux';\n// import { setCurrentPage, setItemsPerPage  } from './PaginationSlice';\n// function Pagination(props) {\n//     const dispatch= useDispatch()\n//   const { currentPage, itemsPerPage } = useSelector(\n//     (state) => state.PaginationData\n//   );\n//    console.log(currentPage)\n//     const [allProducts, setAllProducts] = useState([]);\n//     const [page, setPage] = useState(1);\n//     const [displayPages, setDisplayPages] = useState(3); //number of number display in paginationitems display\n//     // const [currentPage, setCurrentPage] = useState(1);\n//     // const [itemsPerPage, setItemsPerPage] = useState(5);\n//     // useEffect(()=>{\n//     //     dispatch(setCurrentPage(currentPage - 1));\n//     // },[currentPage])\n//     useEffect(() => {\n//          dispatch(setCurrentPage(0))\n//          setPage(1);\n//     }, [itemsPerPage]);\n//     const handlePage = (page) => {\n//         dispatch(setCurrentPage(page))\n//     };\n//     const setNext = () => {\n//         if (currentPage === page + displayPages - 1) {\n//             setPage(page + 1);\n//             dispatch(setCurrentPage(currentPage + 1));\n//         } else {\n//             dispatch(setCurrentPage(currentPage + 1));\n//         }\n//     };\n//     const setPrev = () => {\n//         if (currentPage === page) {\n//             setPage(page - 1);\n//            dispatch(setCurrentPage(currentPage - 1));\n//         } else {\n//             dispatch(setCurrentPage(currentPage - 1));\n//         }\n//     };\n//     return (\n//         <div className=\"row\" style={{ userSelect: 'none' }}>\n//             <div className=\"col-sm-8\">\n//                 <ul className=\"pagination\">\n//                     <li\n//                         className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}\n//                         onClick={() => setPrev()}\n//                         style={{\n//                             pointerEvents: `${currentPage === 1 ? \"none\" : \"\"}`,\n//                             cursor: \"pointer\",\n//                         }}\n//                     >\n//                         <a className=\"page-link\">Previous</a>\n//                     </li>\n//                     {\n//                         Array.from({ length: displayPages }, (_, i) => i).map(pageNo => {\n//                             if (page + pageNo <= Math.floor(props.AllDataLength / itemsPerPage) + 1) {\n//                                 return (\n//                                     <li\n//                                         key={pageNo}\n//                                         className={`page-item ${currentPage === page + pageNo ? \"active\" : \"\"\n//                                             }`}\n//                                         onClick={() => handlePage(page + pageNo)}\n//                                     >\n//                                         <a className=\"page-link\">{page + pageNo}</a>\n//                                     </li>\n//                                 )\n//                             }\n//                         })\n//                     }\n//                     <li\n//                         className={`page-item ${currentPage ===\n//                             Math.floor(props.AllDataLength  / itemsPerPage) + 1\n//                             ? \"disabled\"\n//                             : \"\"\n//                             }`}\n//                         onClick={() => setNext()}\n//                         style={{\n//                             pointerEvents: `${currentPage ===\n//                                 Math.floor(props.AllDataLength / itemsPerPage) + 1\n//                                 ? \"none\"\n//                                 : \"\"\n//                                 }`,\n//                             cursor: 'pointer'\n//                         }}\n//                     >\n//                         <a className=\"page-link\">Next</a>\n//                     </li>\n//                 </ul>\n//             </div>\n//             <div className=\"col-sm-4 text-right\">\n//                 <div style={{ margin: \"25px 0\" }}>\n//                     <label htmlFor=\"\" className=\"control-label\">\n//                         Items Per Page:\n//                     </label>\n//                     <select\n//                         name=\"\"\n//                         id=\"\"\n//                         defaultValue={\"5\"}\n//                         onChange={(e) =>{   dispatch(setItemsPerPage(e.target.value))}}\n//                     >\n//                         <option value=\"5\">5</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"25\">25</option>\n//                         <option value=\"50\">50</option>\n//                     </select>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n// export default Pagination\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/am-pc-63/Downloads/Shopping-App-main/src/Components/Pagination.js"],"names":["React","useEffect","useState","axios","useDispatch","useSelector","setCurrentPage","setItemsPerPage","setPage","Pagination","page","currentPage","itemsPerPage","displayPages","state","pagination","allProducts","HomeData","dataFromApi","dispatch","handlePage","handleItemsPerPage","value","setNext","setPrev","userSelect","pointerEvents","cursor","Array","from","length","_","i","map","pageNo","Math","ceil","floor","margin","e","target"],"mappings":"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":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentPage, setItemsPerPage, setPage } from \"./PaginationSlice\";\n\nfunction Pagination() {\n  const { page, currentPage, itemsPerPage, displayPages } = useSelector(\n    (state) => state.pagination\n  );\n\n  const { allProducts } = useSelector((state) => state.HomeData.dataFromApi);\n\n  const dispatch = useDispatch();\n\n  const handlePage = (page) => {\n    dispatch(setCurrentPage(page));\n  };\n\n  const handleItemsPerPage = (value) => {\n    dispatch(setItemsPerPage(value));\n    dispatch(setCurrentPage(1));\n    dispatch(setPage(1));\n  };\n  const setNext = () => {\n    if (currentPage === page + displayPages - 1) {\n      dispatch(setPage(page + 1));\n      dispatch(setCurrentPage(currentPage + 1));\n    } else {\n      dispatch(setCurrentPage(currentPage + 1));\n    }\n  };\n\n  const setPrev = () => {\n    if (currentPage === page) {\n      dispatch(setPage(page - 1));\n      dispatch(setCurrentPage(currentPage - 1));\n    } else {\n      dispatch(setCurrentPage(currentPage - 1));\n    }\n  };\n\n  return (\n    <div className=\"row\" style={{ userSelect: \"none\" }}>\n      <div className=\"col-sm-8\">\n        <ul className=\"pagination\">\n          <li\n            className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}\n            onClick={() => setPrev()}\n            style={{\n              pointerEvents: `${currentPage === 1 ? \"none\" : \"\"}`,\n              cursor: \"pointer\",\n            }}\n          >\n            <a className=\"page-link\">Previous</a>\n          </li>\n          {Array.from({ length: displayPages }, (_, i) => i).map((pageNo) => {\n            if (page + pageNo <= Math.ceil(allProducts.length / itemsPerPage)) {\n              return (\n                <li\n                  key={pageNo}\n                  className={`page-item ${\n                    currentPage === page + pageNo ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handlePage(page + pageNo)}\n                >\n                  <a className=\"page-link\">{page + pageNo}</a>\n                </li>\n              );\n            }\n          })}\n          <li\n            className={`page-item ${\n              currentPage === Math.floor(allProducts.length / itemsPerPage) + 1\n                ? \"disabled\"\n                : \"\"\n            }`}\n            onClick={() => setNext()}\n            style={{\n              pointerEvents: `${\n                currentPage ===\n                Math.floor(allProducts.length / itemsPerPage) + 1\n                  ? \"none\"\n                  : \"\"\n              }`,\n              cursor: \"pointer\",\n            }}\n          >\n            <a className=\"page-link\">Next</a>\n          </li>\n        </ul>\n      </div>\n\n      <div className=\"col-sm-4 text-right\">\n        <div style={{ margin: \"25px 0\" }}>\n          <label htmlFor=\"\" className=\"control-label\">\n            Items Per Page:\n          </label>\n          <select\n            name=\"\"\n            id=\"\"\n            defaultValue={\"5\"}\n            onChange={(e) => handleItemsPerPage(e.target.value)}\n          >\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"25\">25</option>\n            <option value=\"50\">50</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pagination;\n\n// import React, { useEffect, useState } from 'react'\n// import axios from \"axios\";\n// import { ToastContainer, toast } from 'react-toastify';\n// import { useDispatch ,useSelector } from 'react-redux';\n// import { setCurrentPage, setItemsPerPage  } from './PaginationSlice';\n\n// function Pagination(props) {\n\n//     const dispatch= useDispatch()\n//   const { currentPage, itemsPerPage } = useSelector(\n//     (state) => state.PaginationData\n//   );\n//    console.log(currentPage)\n//     const [allProducts, setAllProducts] = useState([]);\n//     const [page, setPage] = useState(1);\n//     const [displayPages, setDisplayPages] = useState(3); //number of number display in paginationitems display\n//     // const [currentPage, setCurrentPage] = useState(1);\n//     // const [itemsPerPage, setItemsPerPage] = useState(5);\n\n//     // useEffect(()=>{\n//     //     dispatch(setCurrentPage(currentPage - 1));\n//     // },[currentPage])\n\n//     useEffect(() => {\n\n//          dispatch(setCurrentPage(0))\n//          setPage(1);\n//     }, [itemsPerPage]);\n\n//     const handlePage = (page) => {\n//         dispatch(setCurrentPage(page))\n//     };\n\n//     const setNext = () => {\n//         if (currentPage === page + displayPages - 1) {\n//             setPage(page + 1);\n//             dispatch(setCurrentPage(currentPage + 1));\n//         } else {\n//             dispatch(setCurrentPage(currentPage + 1));\n//         }\n//     };\n\n//     const setPrev = () => {\n//         if (currentPage === page) {\n//             setPage(page - 1);\n//            dispatch(setCurrentPage(currentPage - 1));\n//         } else {\n//             dispatch(setCurrentPage(currentPage - 1));\n//         }\n//     };\n\n//     return (\n//         <div className=\"row\" style={{ userSelect: 'none' }}>\n//             <div className=\"col-sm-8\">\n//                 <ul className=\"pagination\">\n//                     <li\n//                         className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}\n//                         onClick={() => setPrev()}\n//                         style={{\n//                             pointerEvents: `${currentPage === 1 ? \"none\" : \"\"}`,\n//                             cursor: \"pointer\",\n//                         }}\n//                     >\n//                         <a className=\"page-link\">Previous</a>\n//                     </li>\n//                     {\n//                         Array.from({ length: displayPages }, (_, i) => i).map(pageNo => {\n//                             if (page + pageNo <= Math.floor(props.AllDataLength / itemsPerPage) + 1) {\n//                                 return (\n//                                     <li\n//                                         key={pageNo}\n//                                         className={`page-item ${currentPage === page + pageNo ? \"active\" : \"\"\n//                                             }`}\n//                                         onClick={() => handlePage(page + pageNo)}\n//                                     >\n//                                         <a className=\"page-link\">{page + pageNo}</a>\n//                                     </li>\n//                                 )\n//                             }\n//                         })\n//                     }\n//                     <li\n//                         className={`page-item ${currentPage ===\n//                             Math.floor(props.AllDataLength  / itemsPerPage) + 1\n//                             ? \"disabled\"\n//                             : \"\"\n//                             }`}\n//                         onClick={() => setNext()}\n//                         style={{\n//                             pointerEvents: `${currentPage ===\n//                                 Math.floor(props.AllDataLength / itemsPerPage) + 1\n//                                 ? \"none\"\n//                                 : \"\"\n//                                 }`,\n//                             cursor: 'pointer'\n//                         }}\n//                     >\n//                         <a className=\"page-link\">Next</a>\n//                     </li>\n//                 </ul>\n//             </div>\n\n//             <div className=\"col-sm-4 text-right\">\n//                 <div style={{ margin: \"25px 0\" }}>\n//                     <label htmlFor=\"\" className=\"control-label\">\n//                         Items Per Page:\n//                     </label>\n//                     <select\n//                         name=\"\"\n//                         id=\"\"\n//                         defaultValue={\"5\"}\n//                         onChange={(e) =>{   dispatch(setItemsPerPage(e.target.value))}}\n//                     >\n//                         <option value=\"5\">5</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"25\">25</option>\n//                         <option value=\"50\">50</option>\n//                     </select>\n//                 </div>\n//             </div>\n\n//         </div>\n//     )\n// }\n\n// export default Pagination\n"]},"metadata":{},"sourceType":"module"}